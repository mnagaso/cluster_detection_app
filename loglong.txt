#####################################
## Initialization start            ##
#####################################




here in csv_import
number of dangling node 0
p_alpha calculation with power method on going...
step:  0  ||p_t+1 - p_t||_1 ->  3.69428467495
step:  10  ||p_t+1 - p_t||_1 ->  0.0128976715127
step:  20  ||p_t+1 - p_t||_1 ->  0.0011900928947
step:  30  ||p_t+1 - p_t||_1 ->  0.000104602658202
step:  40  ||p_t+1 - p_t||_1 ->  1.12474432295e-05
step:  50  ||p_t+1 - p_t||_1 ->  1.07464304738e-06
step:  60  ||p_t+1 - p_t||_1 ->  9.28504809983e-08
step:  70  ||p_t+1 - p_t||_1 ->  7.39980518527e-09
step:  80  ||p_t+1 - p_t||_1 ->  5.46115874744e-10
step:  90  ||p_t+1 - p_t||_1 ->  3.70705827146e-11
step:  100  ||p_t+1 - p_t||_1 ->  2.31266394923e-12
step:  110  ||p_t+1 - p_t||_1 ->  1.46285761282e-13
step:  120  ||p_t+1 - p_t||_1 ->  8.78463968235e-15
power method converged at: 121 step
end the power iteration with ||p_t+1 - p_t||_1 =  8.78463968235e-15
elapsed time:  0.013022899627685547  seconds
p_alpha
[[ 0.02571933  0.0261252   0.02150517  0.02288758  0.0401899   0.03340137
   0.03345077  0.03142737  0.03061364  0.02910108  0.02317543  0.04344993
   0.04817743  0.03115971  0.04173748  0.05994166  0.06114113  0.04609624
   0.06636811  0.06692896  0.03800043  0.06190501  0.06687445  0.05062262]]




#####################################
## Two Level Clustering start      ##
#####################################




cluster tree initialized
theoretically minimum code length:   [[ 4.49293031]]  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.94936858]]
# difference %:  [[-2278.48458439]]
============================================
modified_louvain mode is selected.
start recursive modules/submodules division.
============================================
ql initi val [[ 0.94936858]]

   /-1--node member--1..2..3..4..11..12..14..15..21..24
  |
--|--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
starting state of one level finer of parent id 0

   /-1--node member--1..2..3..4..11..12..14..15..21..24
  |
--|--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   1.58385859412  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.82293512]]
# difference %:  [[-837.47757495]]
id 1 go deeper
starting state of one level finer of parent id 1

      /-4--node member--4
   /1|
  |   \-5--node member--1..2..3..11..12..14..15..21..24
--|
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   1.45913749575  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.76468219]]
# difference %:  [[-698.64468418]]
id 5 go deeper
starting state of one level finer of parent id 5

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
--|      \-7--node member--1..2..3..11..14..15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   1.26254818914  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.76385693]]
# difference %:  [[-601.24858858]]
id 7 go deeper
starting state of one level finer of parent id 7

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
--|      \7|
  |         \-9--node member--2..3..11..14..15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   1.12672433703  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.70313677]]
# difference %:  [[-498.79185025]]
id 9 go deeper
starting state of one level finer of parent id 9

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
--|        |   /-10--node member--3
  |         \9|
  |            \-11--node member--2..11..14..15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   1.00760350528  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.68583573]]
# difference %:  [[-410.59452306]]
id 11 go deeper
starting state of one level finer of parent id 11

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
--|         \9|
  |           |   /-12--node member--14
  |            \11
  |               \-13--node member--2..11..15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.851674889629  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.67661358]]
# difference %:  [[-345.10157062]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
--|           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--2..15..21..24
  |               \13
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
--|            \11      /-16--node member--2
  |              |   /14
  |               \13   \-17--node member--15..21..24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.51213898]]
# difference %:  [[ 149.50644923]]
$$$ ql state: best-- [[ 0.67661358]]  now-- [[ 0.51213898]]

theoretically minimum code length:   0.714297775616  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.71939896]]
# difference %:  [[-269.57483269]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--2
  |               \13
  |                 |   /-16--node member--11
  |                  \15
  |                     \-17--node member--15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.71939896]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.71939896]]  now-- [[ 0.71939896]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.71939896]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.71939896]]  now-- [[ 0.71939896]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.71939896]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.71939896]]  now-- [[ 0.71939896]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.71939896]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.71939896]]  now-- [[ 0.71939896]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.71939896]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.71939896]]  now-- [[ 0.71939896]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.51213898]]
# difference %:  [[ 149.50644923]]
$$$ ql state: best-- [[ 0.67661358]]  now-- [[ 0.51213898]]

theoretically minimum code length:   0.714297775616  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.71939896]]
# difference %:  [[-269.57483269]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--2
  |               \13
  |                 |   /-16--node member--15..21..24
  |                  \15
  |                     \-17--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.71939896]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.71939896]]  now-- [[ 0.71939896]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.71939896]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.71939896]]  now-- [[ 0.71939896]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.71939896]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.71939896]]  now-- [[ 0.71939896]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.71939896]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.71939896]]  now-- [[ 0.71939896]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.71939896]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.71939896]]  now-- [[ 0.71939896]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.67661358]]
# difference %:  [[ 197.52078686]]
$$$ ql state: best-- [[ 0.67661358]]  now-- [[ 0.67661358]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
--|            \11      /-16--node member--2
  |              |   /14
  |               \13   \-17--node member--15..21..24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.67661358]]
# difference %:  [[ 197.52078686]]
$$$ ql state: best-- [[ 0.67661358]]  now-- [[ 0.67661358]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                     \-17--node member--2..15..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.67661358]]
# difference %:  [[ 189.22617099]]
$$$ ql state: best-- [[ 0.67661358]]  now-- [[ 0.67661358]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 11
##### start re-clustering for node id 11
# clustring core algorithm Converged
# improved quality value:  [[ 0.774356]]
# difference %:  [[ 179.2225037]]
$$$ ql state: best-- [[ 0.68583573]]  now-- [[ 0.774356]]
ql best: [[ 0.774356]] at loop count, 0

theoretically minimum code length:   0.881731721707  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[-312.28785556]]
id 12 go deeper
starting state of one level finer of parent id 12

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|      /-14--node member--14
--|           |   /12
  |            \11   \-15--node member--2..15..21..24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|      /-14--node member--14
  |           |   /12
--|           |  |  |   /-16--node member--2..15..24
  |            \11   \15
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|     |
  |           |   /12      /-18--node member--2..24
--|           |  |  |   /16
  |           |  |   \15   \-19--node member--15
  |            \11     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--15
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--15
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
--|           |  |   \15
  |            \11     |   /-18--node member--15
  |              |      \17
  |              |         \-19--node member--2..24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
--|           |  |   \15
  |            \11     |   /-18--node member--15
  |              |      \17
  |              |         \-19--node member--2..24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12   /-16--node member--21
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12   /-16--node member--21
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
--|           |  |   \15
  |            \11     |   /-18--node member--2..24
  |              |      \17
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12   /-16--node member--21
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12   /-16--node member--21
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12   /-16--node member--21
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
--|           |  |   \15
  |            \11     |   /-18--node member--2..24
  |              |      \17
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12   /-16--node member--21
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12   /-16--node member--21
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 193.3514294]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|      /-14--node member--14
  |           |   /12
--|           |  |  |   /-16--node member--2..15..24
  |            \11   \15
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|     |
  |           |   /12      /-18--node member--2..24
--|           |  |  |   /16
  |           |  |   \15   \-19--node member--15
  |            \11     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--15
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--15
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|     |
  |           |   /12      /-18--node member--2..24
--|           |  |  |   /16
  |           |  |   \15   \-19--node member--15
  |            \11     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--15
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--15
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 691.94424436]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.55114917]]
# difference %:  [[ 179.68631621]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.55114917]]

theoretically minimum code length:   0.702451750513  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[-244.11968318]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |         /-16--node member--14
  |         \9|      /14
--|           |   /12   \-17--node member--2..15..24
  |           |  |  |
  |            \11   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |         /-16--node member--14
  |         \9|      /14
  |           |     |  |   /-18--node member--2..24
--|           |   /12   \17
  |           |  |  |      \-19--node member--15
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |        |
  |         \9|      /14      /-20--node member--2
  |           |     |  |   /18
--|           |     |   \17   \-21--node member--24
  |           |   /12     |
  |           |  |  |      \-19--node member--15
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |        |
  |         \9|      /14      /-20--node member--2
  |           |     |  |   /18
--|           |     |   \17   \-21--node member--24
  |           |   /12     |
  |           |  |  |      \-19--node member--15
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |        |
  |         \9|      /14      /-20--node member--2
  |           |     |  |   /18
--|           |     |   \17   \-21--node member--24
  |           |   /12     |
  |           |  |  |      \-19--node member--15
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |      /14
  |         \9|     |  |   /-18--node member--15
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |      /14
  |         \9|     |  |   /-18--node member--15
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.61717046]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |         /-16--node member--14
  |         \9|      /14
  |           |     |  |   /-18--node member--15
--|           |   /12   \17
  |           |  |  |      \-19--node member--2..24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |      /14
  |         \9|     |  |   /-18--node member--15
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |      /14
  |         \9|     |  |   /-18--node member--15
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |        |
  |         \9|      /14      /-20--node member--2
  |           |     |  |   /18
--|           |     |   \17   \-21--node member--24
  |           |   /12     |
  |           |  |  |      \-19--node member--15
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |      /14
  |         \9|     |  |   /-18--node member--15
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |      /14
  |         \9|     |  |   /-18--node member--15
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.61717046]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |         /-16--node member--14
  |         \9|      /14
  |           |     |  |   /-18--node member--2..24
--|           |   /12   \17
  |           |  |  |      \-19--node member--15
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |        |
  |         \9|      /14      /-20--node member--2
  |           |     |  |   /18
--|           |     |   \17   \-21--node member--24
  |           |   /12     |
  |           |  |  |      \-19--node member--15
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |      /14
  |         \9|     |  |   /-18--node member--15
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |      /14
  |         \9|     |  |   /-18--node member--15
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |      /14
  |         \9|     |  |   /-18--node member--15
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |      /14
  |         \9|     |  |   /-18--node member--15
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.61717046]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |         /-16--node member--14
  |         \9|      /14
  |           |     |  |   /-18--node member--15
--|           |   /12   \17
  |           |  |  |      \-19--node member--2..24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |      /14
  |         \9|     |  |   /-18--node member--15
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |      /14
  |         \9|     |  |   /-18--node member--15
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |        |
  |         \9|      /14      /-20--node member--2
  |           |     |  |   /18
--|           |     |   \17   \-21--node member--24
  |           |   /12     |
  |           |  |  |      \-19--node member--15
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |        |
  |         \9|      /14      /-20--node member--2
  |           |     |  |   /18
--|           |     |   \17   \-21--node member--24
  |           |   /12     |
  |           |  |  |      \-19--node member--15
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--14
  |        |  |      /14
  |         \9|     |  |   /-18--node member--15
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |         /-16--node member--15
  |         \9|      /14
  |           |     |  |   /-18--node member--14
--|           |   /12   \17
  |           |  |  |      \-19--node member--2..24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--15
  |        |  |      /14
  |         \9|     |  |   /-18--node member--14
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--15
  |        |  |      /14
  |         \9|     |  |   /-18--node member--14
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--15
  |        |  |      /14
  |         \9|     |  |   /-18--node member--14
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--15
  |        |  |      /14
  |         \9|     |  |   /-18--node member--14
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |         /-16--node member--15
  |        |  |      /14
  |         \9|     |  |   /-18--node member--14
  |           |     |   \17
--|           |   /12     |   /-20--node member--2
  |           |  |  |      \19
  |           |  |  |         \-21--node member--24
  |            \11  |
  |              |   \-15--node member--21
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.55114917]]
# difference %:  [[ 179.68631621]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.55114917]]

theoretically minimum code length:   0.702451750513  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[-213.6700138]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|      /-14--node member--21
  |           |   /12
--|           |  |  |   /-16--node member--2..14..24
  |            \11   \15
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|     |
  |           |   /12      /-18--node member--14
--|           |  |  |   /16
  |           |  |   \15   \-19--node member--2..24
  |            \11     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--14
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--14
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--14
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--14
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--14
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.54018922]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
--|           |  |   \15
  |            \11     |   /-18--node member--2..24
  |              |      \17
  |              |         \-19--node member--14
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12   /-16--node member--15
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--14
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.54018922]]  now-- [[ 0.54018922]]
ql best: [[ 0.54018922]] at loop count, 1

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
--|           |  |   \15
  |            \11     |   /-18--node member--14
  |              |      \17
  |              |         \-19--node member--2..24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.54018922]]  now-- [[ 0.61717046]]
ql best: [[ 0.61717046]] at loop count, 2

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
--|           |  |   \15
  |            \11     |   /-18--node member--2..24
  |              |      \17
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12   /-16--node member--14
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12   /-16--node member--14
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.37496783]]
# difference %:  [[ 450.68379877]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.37496783]]

theoretically minimum code length:   0.293305729665  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|     |
  |           |   /12      /-18--node member--2
--|           |  |  |   /16
  |           |  |   \15   \-19--node member--14
  |            \11     |
  |              |      \-17--node member--15..24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
finish all branches of this subtree finished
id 16 will be erased

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-19--node member--15
  |           |  |  |   /16
--|           |  |  |  |   \-20--node member--24
  |           |  |   \15
  |            \11     |--17--node member--2
  |              |     |
  |              |      \-18--node member--14
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[-244.11968318]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.61717046]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.55114917]]
# difference %:  [[ 179.68631621]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.55114917]]

theoretically minimum code length:   0.702451750513  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[-213.6700138]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|      /-14--node member--21
  |           |   /12
--|           |  |  |   /-16--node member--15
  |            \11   \15
  |              |      \-17--node member--2..14..24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
--|           |  |   \15
  |            \11     |   /-18--node member--2..24
  |              |      \17
  |              |         \-19--node member--14
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12   /-16--node member--15
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--14
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.54018922]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
--|           |  |   \15
  |            \11     |   /-18--node member--2..24
  |              |      \17
  |              |         \-19--node member--14
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12   /-16--node member--15
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--14
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--15
  |           |  |   \15
--|           |  |     |   /-18--node member--14
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.37496783]]
# difference %:  [[ 450.68379877]]
$$$ ql state: best-- [[ 0.54018922]]  now-- [[ 0.37496783]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|     |
  |           |   /12      /-18--node member--15
--|           |  |  |   /16
  |           |  |   \15   \-19--node member--24
  |            \11     |
  |              |      \-17--node member--2..14
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 16 will be erased

theoretically minimum code length:   0.293305729665  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-19--node member--2
  |           |  |  |   /16
--|           |  |  |  |   \-20--node member--14
  |           |  |   \15
  |            \11     |--17--node member--15
  |              |     |
  |              |      \-18--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[-244.11968318]]
$$$ ql state: best-- [[ 0.54018922]]  now-- [[ 0.61717046]]
ql best: [[ 0.61717046]] at loop count, 2

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|     |
  |           |   /12      /-18--node member--2..24
--|           |  |  |   /16
  |           |  |   \15   \-19--node member--15
  |            \11     |
  |              |      \-17--node member--14
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--15
  |              |     |
  |              |      \-17--node member--14
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--14
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--14
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--15
  |              |     |
  |              |      \-17--node member--14
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--14
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.61717046]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
--|           |  |   \15
  |            \11     |   /-18--node member--2..24
  |              |      \17
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12   /-16--node member--14
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--3
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12   /-16--node member--14
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.61717046]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 193.3514294]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]
finish all branches of this subtree finished
id 12 will be erased
just after inner while 11
##### start re-clustering for node id 11
# clustring core algorithm Converged
# improved quality value:  [[ 0.774356]]
# difference %:  [[ 179.2225037]]
$$$ ql state: best-- [[ 0.774356]]  now-- [[ 0.774356]]

theoretically minimum code length:   0.881731721707  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.55256441]]
# difference %:  [[-290.96212743]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
--|           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--2
  |               \13
  |                  \-15--node member--14..15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.744354607693  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[-252.99987003]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
--|            \11
  |              |   /-14--node member--2
  |               \13
  |                 |   /-16--node member--14
  |                  \15
  |                     \-17--node member--15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
ql best: [[ 0.59675034]] at loop count, 0

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 202.6615309]]
$$$ ql state: best-- [[ 0.55256441]]  now-- [[ 0.59306397]]
ql best: [[ 0.59306397]] at loop count, 0

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
--|            \11
  |              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--2
  |                  \15
  |                     \-17--node member--15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 202.6615309]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
--|            \11
  |              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--14
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 691.94424436]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 193.3514294]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
--|            \11
  |              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                     \-17--node member--2..15..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 691.94424436]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.55114917]]
# difference %:  [[ 179.68631621]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.55114917]]

theoretically minimum code length:   0.702451750513  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[-213.6700138]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
--|            \11
  |              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--15
  |                  \15
  |                     \-17--node member--2..14..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.54018922]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.54018922]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.54018922]]  now-- [[ 0.61717046]]
ql best: [[ 0.61717046]] at loop count, 2

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--14
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--14
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--14
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--14
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--14
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--14
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.61717046]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--14
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--14
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--14
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--14
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--14
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--14
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.55114917]]
# difference %:  [[ 179.68631621]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.55114917]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 11
##### start re-clustering for node id 11
# clustring core algorithm Converged
# improved quality value:  [[ 0.68583573]]
# difference %:  [[ 158.73473703]]
$$$ ql state: best-- [[ 0.774356]]  now-- [[ 0.68583573]]

theoretically minimum code length:   0.851674889629  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.67661358]]
# difference %:  [[-345.10157062]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
--|           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
  |               \13
  |                  \-15--node member--2..15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--2..24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 691.94424436]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.67661358]]
# difference %:  [[ 189.22617099]]
$$$ ql state: best-- [[ 0.67661358]]  now-- [[ 0.67661358]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--2..24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.67661358]]
# difference %:  [[ 189.22617099]]
$$$ ql state: best-- [[ 0.67661358]]  now-- [[ 0.67661358]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--11
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--11
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.67661358]]
# difference %:  [[ 189.22617099]]
$$$ ql state: best-- [[ 0.67661358]]  now-- [[ 0.67661358]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
--|            \11      /-16--node member--21
  |              |   /14
  |               \13   \-17--node member--2..15..24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--21
--|              |   /14
  |              |  |  |   /-18--node member--15
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--21
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--21
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--21
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--21
--|              |   /14
  |              |  |  |   /-18--node member--15
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.67661358]]
# difference %:  [[ 189.22617099]]
$$$ ql state: best-- [[ 0.67661358]]  now-- [[ 0.67661358]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--11
  |               \13
  |                 |   /-16--node member--2
  |                  \15
  |                     \-17--node member--15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.51213898]]
# difference %:  [[ 149.50644923]]
$$$ ql state: best-- [[ 0.67661358]]  now-- [[ 0.51213898]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 11
##### start re-clustering for node id 11
# clustring core algorithm Converged
# improved quality value:  [[ 0.774356]]
# difference %:  [[ 179.2225037]]
$$$ ql state: best-- [[ 0.774356]]  now-- [[ 0.774356]]

theoretically minimum code length:   0.881731721707  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.55256441]]
# difference %:  [[-290.96212743]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
--|           |   /-12--node member--11
  |            \11
  |              |   /-14--node member--2
  |               \13
  |                  \-15--node member--14..15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.744354607693  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[-252.99987003]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
--|            \11
  |              |   /-14--node member--2
  |               \13
  |                 |   /-16--node member--14
  |                  \15
  |                     \-17--node member--15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
ql best: [[ 0.59675034]] at loop count, 0

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 202.6615309]]
$$$ ql state: best-- [[ 0.55256441]]  now-- [[ 0.59306397]]
ql best: [[ 0.59306397]] at loop count, 0

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
--|            \11
  |              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--15..21..24
  |                  \15
  |                     \-17--node member--2
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.55256441]]
# difference %:  [[ 188.82204072]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.55256441]]

theoretically minimum code length:   0.744354607693  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[-252.99987003]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--3
  |        |  |
  |         \9|   /-12--node member--11
  |           |  |
--|            \11      /-16--node member--14
  |              |   /14
  |               \13   \-17--node member--15..21..24
  |                 |
  |                  \-15--node member--2
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
ql best: [[ 0.59675034]] at loop count, 0

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.55256441]]
# difference %:  [[ 188.82204072]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.55256441]]

theoretically minimum code length:   0.744354607693  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[-252.99987003]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
--|            \11
  |              |   /-14--node member--2
  |               \13
  |                 |   /-16--node member--14
  |                  \15
  |                     \-17--node member--15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
ql best: [[ 0.59675034]] at loop count, 0

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.55256441]]
# difference %:  [[ 188.82204072]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.55256441]]

theoretically minimum code length:   0.744354607693  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[-252.99987003]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--3
  |         \9|
  |           |   /-12--node member--11
--|            \11
  |              |   /-14--node member--2
  |               \13
  |                 |   /-16--node member--14
  |                  \15
  |                     \-17--node member--15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
ql best: [[ 0.59675034]] at loop count, 0

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.55256441]]
# difference %:  [[ 188.82204072]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.55256441]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 11
##### start re-clustering for node id 11
# clustring core algorithm Converged
# improved quality value:  [[ 0.774356]]
# difference %:  [[ 179.2225037]]
$$$ ql state: best-- [[ 0.774356]]  now-- [[ 0.774356]]
finish all branches of this subtree finished
id 11 will be erased
just after inner while 9
##### start re-clustering for node id 9
# clustring core algorithm Converged
# improved quality value:  [[ 0.75867959]]
# difference %:  [[ 143.69054628]]
$$$ ql state: best-- [[ 0.70313677]]  now-- [[ 0.75867959]]
ql best: [[ 0.75867959]] at loop count, 0

theoretically minimum code length:   1.00085255346  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.65304177]]
# difference %:  [[-405.43319086]]
id 10 go deeper
starting state of one level finer of parent id 10

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|      /-12--node member--2..3..15..21..24
  |        |   /10
--|         \9|   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.844923937808  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.60365166]]
# difference %:  [[-302.32937251]]
id 12 go deeper
starting state of one level finer of parent id 12

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |         /-14--node member--2
  |      \7|      /12
  |        |   /10   \-15--node member--3..15..21..24
--|        |  |  |
  |         \9|   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.707546823794  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.51346031]]
# difference %:  [[-195.83567309]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |         /-14--node member--2
  |      \7|      /12
  |        |     |  |   /-16--node member--3..15..21
  |        |   /10   \15
--|        |  |  |      \-17--node member--24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.489663324184  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |        |
  |      \7|      /12      /-18--node member--3
  |        |     |  |   /16
  |        |     |   \15   \-19--node member--15..21
--|        |   /10     |
  |        |  |  |      \-17--node member--24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |        |
  |     |  |      /12      /-18--node member--3
  |      \7|     |  |   /16
  |        |     |  |  |  |   /-20--node member--15
  |        |     |   \15   \19
--|        |   /10     |      \-21--node member--21
  |        |  |  |     |
  |        |  |  |      \-17--node member--24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |        |
  |     |  |      /12      /-18--node member--3
  |      \7|     |  |   /16
  |        |     |  |  |  |   /-20--node member--15
  |        |     |   \15   \19
--|        |   /10     |      \-21--node member--21
  |        |  |  |     |
  |        |  |  |      \-17--node member--24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |        |
  |     |  |      /12      /-18--node member--3
  |      \7|     |  |   /16
  |        |     |  |  |  |   /-20--node member--15
  |        |     |   \15   \19
--|        |   /10     |      \-21--node member--21
  |        |  |  |     |
  |        |  |  |      \-17--node member--24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |        |
  |     |  |      /12      /-18--node member--3
  |      \7|     |  |   /16
  |        |     |  |  |  |   /-20--node member--15
  |        |     |   \15   \19
--|        |   /10     |      \-21--node member--21
  |        |  |  |     |
  |        |  |  |      \-17--node member--24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |        |
  |     |  |      /12      /-18--node member--3
  |      \7|     |  |   /16
  |        |     |  |  |  |   /-20--node member--15
  |        |     |   \15   \19
--|        |   /10     |      \-21--node member--21
  |        |  |  |     |
  |        |  |  |      \-17--node member--24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.51346031]]
# difference %:  [[ 1155.33392039]]
$$$ ql state: best-- [[ 0.51346031]]  now-- [[ 0.51346031]]

theoretically minimum code length:   0.489663324184  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |      \7|     |  |   /-16--node member--24
  |        |     |   \15
  |        |   /10     |   /-18--node member--3
--|        |  |  |      \17
  |        |  |  |         \-19--node member--15..21
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--24
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--21
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--24
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--21
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--24
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--21
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--24
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--21
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--24
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--21
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.51346031]]
# difference %:  [[ 1155.33392039]]
$$$ ql state: best-- [[ 0.51346031]]  now-- [[ 0.51346031]]

theoretically minimum code length:   0.489663324184  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |      \7|     |  |   /-16--node member--24
  |        |     |   \15
  |        |   /10     |   /-18--node member--3
--|        |  |  |      \17
  |        |  |  |         \-19--node member--15..21
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--24
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--21
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--24
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--21
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--24
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--21
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--24
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--21
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--24
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--21
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 1371.7428285]]
$$$ ql state: best-- [[ 0.51346031]]  now-- [[ 0.60963804]]
ql best: [[ 0.60963804]] at loop count, 2

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 198.32923943]]
$$$ ql state: best-- [[ 0.60365166]]  now-- [[ 0.6714833]]
ql best: [[ 0.6714833]] at loop count, 0

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |         /-14--node member--3
  |      \7|      /12
  |        |     |  |   /-16--node member--2
  |        |   /10   \15
--|        |  |  |      \-17--node member--15..21..24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.60365166]]
# difference %:  [[ 178.29449213]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.60365166]]

theoretically minimum code length:   0.707546823794  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.51346031]]
# difference %:  [[-195.83567309]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |         /-14--node member--2
  |      \7|      /12
  |        |     |  |   /-16--node member--3..15..21
  |        |   /10   \15
--|        |  |  |      \-17--node member--24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.489663324184  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |        |
  |      \7|      /12      /-18--node member--3
  |        |     |  |   /16
  |        |     |   \15   \-19--node member--15..21
--|        |   /10     |
  |        |  |  |      \-17--node member--24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |        |
  |     |  |      /12      /-18--node member--3
  |      \7|     |  |   /16
  |        |     |  |  |  |   /-20--node member--15
  |        |     |   \15   \19
--|        |   /10     |      \-21--node member--21
  |        |  |  |     |
  |        |  |  |      \-17--node member--24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |        |
  |     |  |      /12      /-18--node member--3
  |      \7|     |  |   /16
  |        |     |  |  |  |   /-20--node member--15
  |        |     |   \15   \19
--|        |   /10     |      \-21--node member--21
  |        |  |  |     |
  |        |  |  |      \-17--node member--24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |        |
  |     |  |      /12      /-18--node member--3
  |      \7|     |  |   /16
  |        |     |  |  |  |   /-20--node member--15
  |        |     |   \15   \19
--|        |   /10     |      \-21--node member--21
  |        |  |  |     |
  |        |  |  |      \-17--node member--24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |        |
  |     |  |      /12      /-18--node member--3
  |      \7|     |  |   /16
  |        |     |  |  |  |   /-20--node member--15
  |        |     |   \15   \19
--|        |   /10     |      \-21--node member--21
  |        |  |  |     |
  |        |  |  |      \-17--node member--24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |        |
  |     |  |      /12      /-18--node member--3
  |      \7|     |  |   /16
  |        |     |  |  |  |   /-20--node member--15
  |        |     |   \15   \19
--|        |   /10     |      \-21--node member--21
  |        |  |  |     |
  |        |  |  |      \-17--node member--24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 1371.7428285]]
$$$ ql state: best-- [[ 0.51346031]]  now-- [[ 0.60963804]]
ql best: [[ 0.60963804]] at loop count, 0

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 198.32923943]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.6714833]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |            /-16--node member--2
  |     |  |         /14
  |      \7|      /12   \-17--node member--15..21..24
  |        |     |  |
--|        |   /10   \-15--node member--3
  |        |  |  |
  |         \9|   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.60365166]]
# difference %:  [[ 178.29449213]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.60365166]]

theoretically minimum code length:   0.707546823794  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.35270932]]
# difference %:  [[-134.52464665]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |         /-14--node member--2
  |      \7|      /12
  |        |     |  |   /-16--node member--21
  |        |   /10   \15
--|        |  |  |      \-17--node member--3..15..24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.5282668526  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |      \7|     |  |   /-16--node member--21
  |        |     |   \15
  |        |   /10     |   /-18--node member--3
--|        |  |  |      \17
  |        |  |  |         \-19--node member--15..24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.35270932]]
# difference %:  [[ 370.23536369]]
$$$ ql state: best-- [[ 0.35270932]]  now-- [[ 0.35270932]]

theoretically minimum code length:   0.5282668526  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |      \7|     |  |   /-16--node member--21
  |        |     |   \15
  |        |   /10     |   /-18--node member--3
--|        |  |  |      \17
  |        |  |  |         \-19--node member--15..24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.35270932]]
# difference %:  [[ 370.23536369]]
$$$ ql state: best-- [[ 0.35270932]]  now-- [[ 0.35270932]]

theoretically minimum code length:   0.5282668526  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |      \7|     |  |   /-16--node member--21
  |        |     |   \15
  |        |   /10     |   /-18--node member--3
--|        |  |  |      \17
  |        |  |  |         \-19--node member--15..24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.35270932]]
# difference %:  [[ 370.23536369]]
$$$ ql state: best-- [[ 0.35270932]]  now-- [[ 0.35270932]]

theoretically minimum code length:   0.5282668526  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |      \7|     |  |   /-16--node member--21
  |        |     |   \15
  |        |   /10     |   /-18--node member--3
--|        |  |  |      \17
  |        |  |  |         \-19--node member--15..24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.35270932]]
# difference %:  [[ 370.23536369]]
$$$ ql state: best-- [[ 0.35270932]]  now-- [[ 0.35270932]]

theoretically minimum code length:   0.5282668526  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |      \7|     |  |   /-16--node member--21
  |        |     |   \15
  |        |   /10     |   /-18--node member--3
--|        |  |  |      \17
  |        |  |  |         \-19--node member--15..24
  |         \9|  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |         /-14--node member--2
  |     |  |      /12
  |     |  |     |  |   /-16--node member--21
  |      \7|     |   \15
  |        |     |     |   /-18--node member--3
  |        |   /10      \17
--|        |  |  |        |   /-20--node member--15
  |        |  |  |         \19
  |         \9|  |            \-21--node member--24
  |           |  |
  |           |   \-13--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 639.93080666]]
$$$ ql state: best-- [[ 0.35270932]]  now-- [[ 0.60963804]]
ql best: [[ 0.60963804]] at loop count, 4
finish all branches of this subtree finished
id 15 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 198.32923943]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.6714833]]
finish all branches of this subtree finished
id 12 will be erased
just after inner while 10
##### start re-clustering for node id 10
# clustring core algorithm Converged
# improved quality value:  [[ 0.65304177]]
# difference %:  [[ 161.33616603]]
$$$ ql state: best-- [[ 0.65304177]]  now-- [[ 0.65304177]]

theoretically minimum code length:   0.844923937808  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.60365166]]
# difference %:  [[-302.32937251]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|      /-12--node member--14
  |        |   /10
  |        |  |  |   /-14--node member--2
--|         \9|   \13
  |           |      \-15--node member--3..15..21..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.707546823794  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[-232.51821433]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--2
  |        |  |   \13
--|         \9|     |   /-16--node member--3
  |           |      \15
  |           |         \-17--node member--15..21..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 198.32923943]]
$$$ ql state: best-- [[ 0.60365166]]  now-- [[ 0.6714833]]
ql best: [[ 0.6714833]] at loop count, 0

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--3
  |        |  |   \13
--|         \9|     |   /-16--node member--2..15..24
  |           |      \15
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--2..24
--|        |  |     |   /16
  |         \9|      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 691.94424436]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 189.63227893]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.6714833]]
ql best: [[ 0.6714833]] at loop count, 1

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--3
  |        |  |   \13
--|         \9|     |   /-16--node member--2
  |           |      \15
  |           |         \-17--node member--15..21..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60365166]]
# difference %:  [[ 178.29449213]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.60365166]]

theoretically minimum code length:   0.707546823794  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[-232.51821433]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--2
  |        |  |   \13
--|         \9|     |   /-16--node member--3
  |           |      \15
  |           |         \-17--node member--15..21..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 198.32923943]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.6714833]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--3
  |        |  |   \13
--|         \9|     |   /-16--node member--21
  |           |      \15
  |           |         \-17--node member--2..15..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
--|         \9|      \15
  |           |        |   /-18--node member--2..24
  |           |         \17
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--2..24
--|        |  |     |   /16
  |         \9|      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--2..24
--|        |  |     |   /16
  |         \9|      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
--|         \9|      \15
  |           |        |   /-18--node member--15
  |           |         \17
  |           |            \-19--node member--2..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
--|         \9|      \15
  |           |        |   /-18--node member--2..24
  |           |         \17
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 189.63227893]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.6714833]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 10
##### start re-clustering for node id 10
# clustring core algorithm Converged
# improved quality value:  [[ 0.71956591]]
# difference %:  [[ 177.77117672]]
$$$ ql state: best-- [[ 0.65304177]]  now-- [[ 0.71956591]]
ql best: [[ 0.71956591]] at loop count, 1

theoretically minimum code length:   0.881731721707  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[-312.28785556]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|      /-12--node member--3
  |        |   /10
  |        |  |  |   /-14--node member--2..15..21..24
--|         \9|   \13
  |           |      \-15--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|     |
  |        |   /10      /-16--node member--2
  |        |  |  |   /14
--|        |  |   \13   \-17--node member--15..21..24
  |         \9|     |
  |           |      \-15--node member--14
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 202.6615309]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--14
  |        |  |   \13
--|         \9|     |   /-16--node member--2
  |           |      \15
  |           |         \-17--node member--15..21..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 202.6615309]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--14
  |        |  |   \13
--|         \9|     |   /-16--node member--21
  |           |      \15
  |           |         \-17--node member--2..15..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
--|         \9|      \15
  |           |        |   /-18--node member--15
  |           |         \17
  |           |            \-19--node member--2..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
--|         \9|      \15
  |           |        |   /-18--node member--2..24
  |           |         \17
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
--|         \9|      \15
  |           |        |   /-18--node member--15
  |           |         \17
  |           |            \-19--node member--2..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 691.94424436]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 193.3514294]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--14
  |        |  |   \13
--|         \9|     |   /-16--node member--2
  |           |      \15
  |           |         \-17--node member--15..21..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.55256441]]
# difference %:  [[ 188.82204072]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.55256441]]

theoretically minimum code length:   0.744354607693  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[-252.99987003]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--2
  |        |  |   \13
--|         \9|     |   /-16--node member--14
  |           |      \15
  |           |         \-17--node member--15..21..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
ql best: [[ 0.59675034]] at loop count, 0

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 202.6615309]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 10
##### start re-clustering for node id 10
# clustring core algorithm Converged
# improved quality value:  [[ 0.71956591]]
# difference %:  [[ 177.77117672]]
$$$ ql state: best-- [[ 0.71956591]]  now-- [[ 0.71956591]]

theoretically minimum code length:   0.881731721707  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.55256441]]
# difference %:  [[-290.96212743]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|      /-12--node member--3
  |        |   /10
  |        |  |  |   /-14--node member--2
--|         \9|   \13
  |           |      \-15--node member--14..15..21..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.744354607693  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[-252.99987003]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--2
  |        |  |   \13
--|         \9|     |   /-16--node member--14
  |           |      \15
  |           |         \-17--node member--15..21..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
ql best: [[ 0.59675034]] at loop count, 0

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 202.6615309]]
$$$ ql state: best-- [[ 0.55256441]]  now-- [[ 0.59306397]]
ql best: [[ 0.59306397]] at loop count, 0

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--14
  |        |  |   \13
--|         \9|     |   /-16--node member--2
  |           |      \15
  |           |         \-17--node member--15..21..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 202.6615309]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--14
  |        |  |   \13
--|         \9|     |   /-16--node member--21
  |           |      \15
  |           |         \-17--node member--2..15..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
--|         \9|      \15
  |           |        |   /-18--node member--2..24
  |           |         \17
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
--|         \9|      \15
  |           |        |   /-18--node member--2..24
  |           |         \17
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
--|        |  |     |   /16
  |         \9|      \15   \-19--node member--2..24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
--|         \9|      \15
  |           |        |   /-18--node member--15
  |           |         \17
  |           |            \-19--node member--2..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
--|         \9|      \15
  |           |        |   /-18--node member--15
  |           |         \17
  |           |            \-19--node member--2..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |     |
  |      \7|   /10   /-14--node member--14
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--3
  |     |  |   /10
  |      \7|  |  |   /-14--node member--14
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 193.3514294]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|   /10
  |        |  |  |   /-14--node member--14
  |        |  |   \13
--|         \9|     |   /-16--node member--15..21..24
  |           |      \15
  |           |         \-17--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.55256441]]
# difference %:  [[ 188.82204072]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.55256441]]

theoretically minimum code length:   0.744354607693  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[-252.99987003]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--3
  |      \7|     |
  |        |   /10      /-16--node member--14
  |        |  |  |   /14
--|        |  |   \13   \-17--node member--15..21..24
  |         \9|     |
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
ql best: [[ 0.59675034]] at loop count, 0

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.55256441]]
# difference %:  [[ 188.82204072]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.55256441]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 10
##### start re-clustering for node id 10
# clustring core algorithm Converged
# improved quality value:  [[ 0.65304177]]
# difference %:  [[ 161.33616603]]
$$$ ql state: best-- [[ 0.71956591]]  now-- [[ 0.65304177]]

theoretically minimum code length:   0.844923937808  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.60365166]]
# difference %:  [[-302.32937251]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|      /-12--node member--14
  |        |   /10
  |        |  |  |   /-14--node member--3..15..21..24
--|         \9|   \13
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.707546823794  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.35270932]]
# difference %:  [[-134.52464665]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|     |
  |        |   /10      /-16--node member--3..15..24
  |        |  |  |   /14
--|        |  |   \13   \-17--node member--21
  |         \9|     |
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.5282668526  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--3
  |        |   /10      /16
  |        |  |  |   /14   \-19--node member--15..24
--|        |  |  |  |  |
  |         \9|   \13   \-17--node member--21
  |           |     |
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--3
  |        |   /10      /16
  |        |  |  |     |  |   /-20--node member--15
  |        |  |  |   /14   \19
--|        |  |  |  |  |      \-21--node member--24
  |         \9|   \13  |
  |           |     |   \-17--node member--21
  |           |     |
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--3
  |        |   /10      /16
  |        |  |  |     |  |   /-20--node member--15
  |        |  |  |   /14   \19
--|        |  |  |  |  |      \-21--node member--24
  |         \9|   \13  |
  |           |     |   \-17--node member--21
  |           |     |
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--3
  |        |   /10      /16
  |        |  |  |     |  |   /-20--node member--15
  |        |  |  |   /14   \19
--|        |  |  |  |  |      \-21--node member--24
  |         \9|   \13  |
  |           |     |   \-17--node member--21
  |           |     |
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--3
  |        |   /10      /16
  |        |  |  |     |  |   /-20--node member--15
  |        |  |  |   /14   \19
--|        |  |  |  |  |      \-21--node member--24
  |         \9|   \13  |
  |           |     |   \-17--node member--21
  |           |     |
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--3
  |        |   /10      /16
  |        |  |  |     |  |   /-20--node member--15
  |        |  |  |   /14   \19
--|        |  |  |  |  |      \-21--node member--24
  |         \9|   \13  |
  |           |     |   \-17--node member--21
  |           |     |
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.35270932]]
# difference %:  [[ 370.23536369]]
$$$ ql state: best-- [[ 0.35270932]]  now-- [[ 0.35270932]]

theoretically minimum code length:   0.5282668526  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10      /-16--node member--21
  |        |  |  |   /14
  |        |  |  |  |  |   /-18--node member--3
--|        |  |   \13   \17
  |         \9|     |      \-19--node member--15..24
  |           |     |
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--3
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--15
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--3
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--15
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--3
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--15
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--3
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--15
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--3
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--15
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--2
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.4570257]]
# difference %:  [[-122.49858205]]
$$$ ql state: best-- [[ 0.4570257]]  now-- [[ 0.4570257]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 639.93080666]]
$$$ ql state: best-- [[ 0.35270932]]  now-- [[ 0.60963804]]
ql best: [[ 0.60963804]] at loop count, 1

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60365166]]
# difference %:  [[ 178.29449213]]
$$$ ql state: best-- [[ 0.60365166]]  now-- [[ 0.60365166]]

theoretically minimum code length:   0.707546823794  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.51346031]]
# difference %:  [[-195.83567309]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--2
  |        |  |   \13
--|         \9|     |   /-16--node member--3..15..21
  |           |      \15
  |           |         \-17--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.489663324184  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--2
  |        |  |  |  |
  |        |  |   \13      /-18--node member--3
--|        |  |     |   /16
  |         \9|      \15   \-19--node member--15..21
  |           |        |
  |           |         \-17--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--2
  |        |  |  |  |
  |        |  |   \13      /-18--node member--3
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--15
  |         \9|      \15   \19
  |           |        |      \-21--node member--21
  |           |        |
  |           |         \-17--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--2
  |        |  |  |  |
  |        |  |   \13      /-18--node member--3
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--15
  |         \9|      \15   \19
  |           |        |      \-21--node member--21
  |           |        |
  |           |         \-17--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--2
  |        |  |  |  |
  |        |  |   \13      /-18--node member--3
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--15
  |         \9|      \15   \19
  |           |        |      \-21--node member--21
  |           |        |
  |           |         \-17--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--2
  |        |  |  |  |
  |        |  |   \13      /-18--node member--3
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--15
  |         \9|      \15   \19
  |           |        |      \-21--node member--21
  |           |        |
  |           |         \-17--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--2
  |        |  |  |  |
  |        |  |   \13      /-18--node member--3
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--15
  |         \9|      \15   \19
  |           |        |      \-21--node member--21
  |           |        |
  |           |         \-17--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.51346031]]
# difference %:  [[ 1155.33392039]]
$$$ ql state: best-- [[ 0.51346031]]  now-- [[ 0.51346031]]

theoretically minimum code length:   0.489663324184  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
--|         \9|      \15
  |           |        |   /-18--node member--3
  |           |         \17
  |           |            \-19--node member--15..21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.51346031]]
# difference %:  [[ 1155.33392039]]
$$$ ql state: best-- [[ 0.51346031]]  now-- [[ 0.51346031]]

theoretically minimum code length:   0.489663324184  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
--|         \9|      \15
  |           |        |   /-18--node member--3
  |           |         \17
  |           |            \-19--node member--15..21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.51346031]]
# difference %:  [[ 1155.33392039]]
$$$ ql state: best-- [[ 0.51346031]]  now-- [[ 0.51346031]]

theoretically minimum code length:   0.489663324184  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
--|         \9|      \15
  |           |        |   /-18--node member--3
  |           |         \17
  |           |            \-19--node member--15..21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]

theoretically minimum code length:   0.370542492432  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--2
  |        |  |   \13
  |        |  |     |   /-16--node member--24
  |        |  |      \15
--|         \9|        |   /-18--node member--3
  |           |         \17
  |           |           |   /-20--node member--15
  |           |            \19
  |           |               \-21--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49933294]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49933294]]  now-- [[-0.49933294]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.28306017]]
# difference %:  [[-90.53146391]]
$$$ ql state: best-- [[ 0.28306017]]  now-- [[ 0.28306017]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 1371.7428285]]
$$$ ql state: best-- [[ 0.51346031]]  now-- [[ 0.60963804]]
ql best: [[ 0.60963804]] at loop count, 3

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 198.32923943]]
$$$ ql state: best-- [[ 0.60365166]]  now-- [[ 0.6714833]]
ql best: [[ 0.6714833]] at loop count, 1

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|     |
  |        |   /10      /-16--node member--2..15..24
  |        |  |  |   /14
--|        |  |   \13   \-17--node member--21
  |         \9|     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--15
  |        |   /10      /16
  |        |  |  |   /14   \-19--node member--2..24
--|        |  |  |  |  |
  |         \9|   \13   \-17--node member--21
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--15
  |        |   /10      /16
  |        |  |  |     |  |   /-20--node member--2
  |        |  |  |   /14   \19
--|        |  |  |  |  |      \-21--node member--24
  |         \9|   \13  |
  |           |     |   \-17--node member--21
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--15
  |        |   /10      /16
  |        |  |  |     |  |   /-20--node member--2
  |        |  |  |   /14   \19
--|        |  |  |  |  |      \-21--node member--24
  |         \9|   \13  |
  |           |     |   \-17--node member--21
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |     |  |     |            /-20--node member--2
  |      \7|     |         /18
  |        |   /10      /16   \-21--node member--24
  |        |  |  |     |  |
--|        |  |  |   /14   \-19--node member--15
  |        |  |  |  |  |
  |         \9|   \13   \-17--node member--21
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--15
  |        |   /10      /16
  |        |  |  |     |  |   /-20--node member--2
  |        |  |  |   /14   \19
--|        |  |  |  |  |      \-21--node member--24
  |         \9|   \13  |
  |           |     |   \-17--node member--21
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--15
  |        |   /10      /16
  |        |  |  |     |  |   /-20--node member--2
  |        |  |  |   /14   \19
--|        |  |  |  |  |      \-21--node member--24
  |         \9|   \13  |
  |           |     |   \-17--node member--21
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10      /-16--node member--21
  |        |  |  |   /14
  |        |  |  |  |  |   /-18--node member--15
--|        |  |   \13   \17
  |         \9|     |      \-19--node member--2..24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--15
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--2
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--15
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--2
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--15
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--2
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--15
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--2
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--15
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--2
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10      /-16--node member--21
  |        |  |  |   /14
  |        |  |  |  |  |   /-18--node member--15
--|        |  |   \13   \17
  |         \9|     |      \-19--node member--2..24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--15
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--2
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--15
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--2
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10     |
  |        |  |  |   /14      /-20--node member--2
  |        |  |  |  |  |   /18
--|        |  |  |  |   \17   \-21--node member--24
  |         \9|   \13     |
  |           |     |      \-19--node member--15
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--15
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--2
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--15
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--2
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10      /-16--node member--21
  |        |  |  |   /14
  |        |  |  |  |  |   /-18--node member--2..24
--|        |  |   \13   \17
  |         \9|     |      \-19--node member--15
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10     |
  |        |  |  |   /14      /-20--node member--2
  |        |  |  |  |  |   /18
--|        |  |  |  |   \17   \-21--node member--24
  |         \9|   \13     |
  |           |     |      \-19--node member--15
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--15
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--2
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--15
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--2
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--15
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--2
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |      /-16--node member--21
  |        |   /10   /14
  |        |  |  |  |  |   /-18--node member--15
  |        |  |  |  |   \17
--|        |  |   \13     |   /-20--node member--2
  |         \9|     |      \19
  |           |     |         \-21--node member--24
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--2..24
  |        |   /10      /16
  |        |  |  |   /14   \-19--node member--15
--|        |  |  |  |  |
  |         \9|   \13   \-17--node member--21
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |     |  |     |            /-20--node member--2
  |      \7|     |         /18
  |        |   /10      /16   \-21--node member--24
  |        |  |  |     |  |
--|        |  |  |   /14   \-19--node member--15
  |        |  |  |  |  |
  |         \9|   \13   \-17--node member--21
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--15
  |        |   /10      /16
  |        |  |  |     |  |   /-20--node member--2
  |        |  |  |   /14   \19
--|        |  |  |  |  |      \-21--node member--24
  |         \9|   \13  |
  |           |     |   \-17--node member--21
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--15
  |        |   /10      /16
  |        |  |  |     |  |   /-20--node member--2
  |        |  |  |   /14   \19
--|        |  |  |  |  |      \-21--node member--24
  |         \9|   \13  |
  |           |     |   \-17--node member--21
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--15
  |        |   /10      /16
  |        |  |  |     |  |   /-20--node member--2
  |        |  |  |   /14   \19
--|        |  |  |  |  |      \-21--node member--24
  |         \9|   \13  |
  |           |     |   \-17--node member--21
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|     |         /-18--node member--15
  |        |   /10      /16
  |        |  |  |     |  |   /-20--node member--2
  |        |  |  |   /14   \19
--|        |  |  |  |  |      \-21--node member--24
  |         \9|   \13  |
  |           |     |   \-17--node member--21
  |           |     |
  |           |      \-15--node member--3
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 189.63227893]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.6714833]]
ql best: [[ 0.6714833]] at loop count, 2

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--3
  |        |  |   \13
--|         \9|     |   /-16--node member--2..15..24
  |           |      \15
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--2..24
--|        |  |     |   /16
  |         \9|      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
--|         \9|      \15
  |           |        |   /-18--node member--15
  |           |         \17
  |           |            \-19--node member--2..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 691.94424436]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 189.63227893]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.6714833]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--3
  |        |  |   \13
--|         \9|     |   /-16--node member--2..15..24
  |           |      \15
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--2..24
--|        |  |     |   /16
  |         \9|      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
--|         \9|      \15
  |           |        |   /-18--node member--2..24
  |           |         \17
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--2..24
--|        |  |     |   /16
  |         \9|      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13      /-18--node member--15
  |        |  |     |   /16
--|        |  |     |  |  |   /-20--node member--2
  |         \9|      \15   \19
  |           |        |      \-21--node member--24
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |  |  |         /-20--node member--2
  |        |  |   \13      /18
--|        |  |     |   /16   \-21--node member--24
  |         \9|     |  |  |
  |           |      \15   \-19--node member--15
  |           |        |
  |           |         \-17--node member--21
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |      /-12--node member--14
  |      \7|   /10
  |        |  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
--|         \9|      \15
  |           |        |   /-18--node member--15
  |           |         \17
  |           |            \-19--node member--2..24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |   /10
  |      \7|  |  |   /-14--node member--3
  |        |  |   \13
  |        |  |     |   /-16--node member--21
  |        |  |      \15
--|         \9|        |   /-18--node member--15
  |           |         \17
  |           |           |   /-20--node member--2
  |           |            \19
  |           |               \-21--node member--24
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |  |  |   /-8--node member--1
  |   \5|  |
  |     |  |      /-12--node member--14
  |     |  |     |
  |      \7|   /10   /-14--node member--3
  |        |  |  |  |
  |        |  |   \13   /-16--node member--21
  |        |  |     |  |
--|        |  |      \15      /-20--node member--2
  |         \9|        |   /18
  |           |         \17   \-21--node member--24
  |           |           |
  |           |            \-19--node member--15
  |           |
  |            \-11--node member--11
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 691.94424436]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[ 169.95510536]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.60180691]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 10
##### start re-clustering for node id 10
# clustring core algorithm Converged
# improved quality value:  [[ 0.65304177]]
# difference %:  [[ 161.33616603]]
$$$ ql state: best-- [[ 0.71956591]]  now-- [[ 0.65304177]]
finish all branches of this subtree finished
id 10 will be erased
just after inner while 9
##### start re-clustering for node id 9
# clustring core algorithm Converged
# improved quality value:  [[ 0.75867959]]
# difference %:  [[ 143.69054628]]
$$$ ql state: best-- [[ 0.75867959]]  now-- [[ 0.75867959]]

theoretically minimum code length:   1.00085255346  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.65304177]]
# difference %:  [[-405.43319086]]
id 11 go deeper
starting state of one level finer of parent id 11

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
--|         \9|
  |           |   /-12--node member--14
  |            \11
  |               \-13--node member--2..3..15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.844923937808  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.60365166]]
# difference %:  [[-302.32937251]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
--|           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--2
  |               \13
  |                  \-15--node member--3..15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.707546823794  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[-232.51821433]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--2
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                     \-17--node member--15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60365166]]
# difference %:  [[ 178.29449213]]
$$$ ql state: best-- [[ 0.60365166]]  now-- [[ 0.60365166]]

theoretically minimum code length:   0.707546823794  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[-232.51821433]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--2
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                     \-17--node member--15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 198.32923943]]
$$$ ql state: best-- [[ 0.60365166]]  now-- [[ 0.6714833]]
ql best: [[ 0.6714833]] at loop count, 1

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--3
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--2..24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--3
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--3
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--3
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--3
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--3
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--3
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--3
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--3
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--3
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--3
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--3
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--3
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--3
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--3
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--3
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 189.63227893]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.6714833]]
ql best: [[ 0.6714833]] at loop count, 2

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--3
  |               \13
  |                 |   /-16--node member--2
  |                  \15
  |                     \-17--node member--15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60365166]]
# difference %:  [[ 178.29449213]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.60365166]]

theoretically minimum code length:   0.707546823794  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[-232.51821433]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--2
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                     \-17--node member--15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.60963804]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.60963804]]  now-- [[ 0.60963804]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60365166]]
# difference %:  [[ 178.29449213]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.60365166]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 11
##### start re-clustering for node id 11
# clustring core algorithm Converged
# improved quality value:  [[ 0.65304177]]
# difference %:  [[ 161.33616603]]
$$$ ql state: best-- [[ 0.65304177]]  now-- [[ 0.65304177]]

theoretically minimum code length:   0.844923937808  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[-301.40545819]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
--|           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--2..3..15..24
  |               \13
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
--|            \11      /-16--node member--3
  |              |   /14
  |               \13   \-17--node member--2..15..24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--3
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--2..24
--|            \11      /16
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--3
--|              |   /14
  |              |  |  |   /-18--node member--15
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--3
--|              |   /14
  |              |  |  |   /-18--node member--15
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--3
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[ 169.95510536]]
$$$ ql state: best-- [[ 0.60180691]]  now-- [[ 0.60180691]]

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                     \-17--node member--2..15..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[ 169.95510536]]
$$$ ql state: best-- [[ 0.60180691]]  now-- [[ 0.60180691]]

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--2..24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[ 169.95510536]]
$$$ ql state: best-- [[ 0.60180691]]  now-- [[ 0.60180691]]

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--2..24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[ 169.95510536]]
$$$ ql state: best-- [[ 0.60180691]]  now-- [[ 0.60180691]]

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--2..24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--2..24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[ 169.95510536]]
$$$ ql state: best-- [[ 0.60180691]]  now-- [[ 0.60180691]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 11
##### start re-clustering for node id 11
# clustring core algorithm Converged
# improved quality value:  [[ 0.65304177]]
# difference %:  [[ 179.66607695]]
$$$ ql state: best-- [[ 0.65304177]]  now-- [[ 0.65304177]]

theoretically minimum code length:   0.844923937808  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[-301.40545819]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
--|           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--2..3..15..24
  |               \13
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
--|            \11      /-16--node member--3
  |              |   /14
  |               \13   \-17--node member--2..15..24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--3
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--2..24
--|            \11      /16
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--3
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--3
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--3
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[ 169.95510536]]
$$$ ql state: best-- [[ 0.60180691]]  now-- [[ 0.60180691]]

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                     \-17--node member--2..15..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--2..24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 189.63227893]]
$$$ ql state: best-- [[ 0.60180691]]  now-- [[ 0.6714833]]
ql best: [[ 0.6714833]] at loop count, 1

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--3
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                     \-17--node member--2..15..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--3
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--3
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--3
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--3
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--3
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 691.94424436]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[ 169.95510536]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.60180691]]

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--2..24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[ 169.95510536]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.60180691]]

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                     \-17--node member--2..15..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--2..24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 189.63227893]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.6714833]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 11
##### start re-clustering for node id 11
# clustring core algorithm Converged
# improved quality value:  [[ 0.71956591]]
# difference %:  [[ 177.77117672]]
$$$ ql state: best-- [[ 0.65304177]]  now-- [[ 0.71956591]]
ql best: [[ 0.71956591]] at loop count, 2

theoretically minimum code length:   0.881731721707  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.55114917]]
# difference %:  [[-290.21690989]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
--|           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--2..14..15..24
  |               \13
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.702451750513  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[-213.6700138]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
--|            \11      /-16--node member--15
  |              |   /14
  |               \13   \-17--node member--2..14..24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11      /-16--node member--15
--|              |   /14
  |              |  |  |   /-18--node member--14
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.54018922]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11      /-16--node member--15
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--14
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--14
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.54018922]]  now-- [[ 0.61717046]]
ql best: [[ 0.61717046]] at loop count, 1

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |         /-18--node member--2..24
--|            \11      /16
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--14
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--3
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--14
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--14
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--14
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--14
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--14
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |         /-18--node member--2..24
--|            \11      /16
  |              |   /14   \-19--node member--14
  |              |  |  |
  |               \13   \-17--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--3
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--14
  |              |  |  |
  |               \13   \-17--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11      /-16--node member--15
--|              |   /14
  |              |  |  |   /-18--node member--14
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.55114917]]
# difference %:  [[ 179.68631621]]
$$$ ql state: best-- [[ 0.55114917]]  now-- [[ 0.55114917]]
ql best: [[ 0.55114917]] at loop count, 0

theoretically minimum code length:   0.702451750513  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[-244.11968318]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
--|            \11
  |              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--14
  |                  \15
  |                     \-17--node member--2..15..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--14
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--14
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--14
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--14
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--14
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--14
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--14
  |                    |
  |                     \-17--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--14
  |                    |
  |                     \-17--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--14
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--14
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--14
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--14
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.37496783]]
# difference %:  [[ 450.68379877]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.37496783]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--24
  |                    |
  |                     \-17--node member--2..14
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 16 will be erased

theoretically minimum code length:   0.293305729665  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-19--node member--2
  |                 |   /16
  |                 |  |   \-20--node member--14
  |                  \15
  |                    |--17--node member--15
  |                    |
  |                     \-18--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[-244.11968318]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.61717046]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--2..24
  |                    |
  |                     \-17--node member--14
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--14
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--14
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--14
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--14
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--14
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--14
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--15
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--14
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--15
  |                  \15
  |                    |   /-18--node member--14
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 193.3514294]]
$$$ ql state: best-- [[ 0.55114917]]  now-- [[ 0.59306397]]
ql best: [[ 0.59306397]] at loop count, 1

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
--|            \11
  |              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--2
  |                  \15
  |                     \-17--node member--15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 202.6615309]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
--|            \11
  |              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                     \-17--node member--2..15..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 193.3514294]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
--|            \11
  |              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--2..24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 193.3514294]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 11
##### start re-clustering for node id 11
# clustring core algorithm Converged
# improved quality value:  [[ 0.71956591]]
# difference %:  [[ 177.77117672]]
$$$ ql state: best-- [[ 0.71956591]]  now-- [[ 0.71956591]]

theoretically minimum code length:   0.881731721707  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.55256441]]
# difference %:  [[-290.96212743]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
--|           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--2
  |               \13
  |                  \-15--node member--14..15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.744354607693  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[-252.99987003]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
--|            \11
  |              |   /-14--node member--2
  |               \13
  |                 |   /-16--node member--15..21..24
  |                  \15
  |                     \-17--node member--14
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
ql best: [[ 0.59675034]] at loop count, 0

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.55256441]]
# difference %:  [[ 188.82204072]]
$$$ ql state: best-- [[ 0.55256441]]  now-- [[ 0.55256441]]

theoretically minimum code length:   0.744354607693  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[-252.99987003]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
--|            \11
  |              |   /-14--node member--2
  |               \13
  |                 |   /-16--node member--14
  |                  \15
  |                     \-17--node member--15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
ql best: [[ 0.59675034]] at loop count, 0

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.55256441]]
# difference %:  [[ 188.82204072]]
$$$ ql state: best-- [[ 0.55256441]]  now-- [[ 0.55256441]]

theoretically minimum code length:   0.744354607693  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[-252.99987003]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
--|            \11
  |              |   /-14--node member--2
  |               \13
  |                 |   /-16--node member--14
  |                  \15
  |                     \-17--node member--15..21..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.59675034]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.59675034]]  now-- [[ 0.59675034]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 202.6615309]]
$$$ ql state: best-- [[ 0.55256441]]  now-- [[ 0.59306397]]
ql best: [[ 0.59306397]] at loop count, 2

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
--|            \11
  |              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--15..21..24
  |                  \15
  |                     \-17--node member--2
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 202.6615309]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
--|            \11
  |              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                     \-17--node member--2..15..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--3
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--21
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--3
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--21
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 691.94424436]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 193.3514294]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 11
##### start re-clustering for node id 11
# clustring core algorithm Converged
# improved quality value:  [[ 0.65304177]]
# difference %:  [[ 161.33616603]]
$$$ ql state: best-- [[ 0.71956591]]  now-- [[ 0.65304177]]
finish all branches of this subtree finished
id 11 will be erased
just after inner while 9
##### start re-clustering for node id 9
# clustring core algorithm Converged
# improved quality value:  [[ 0.75867959]]
# difference %:  [[ 143.69054628]]
$$$ ql state: best-- [[ 0.75867959]]  now-- [[ 0.75867959]]

theoretically minimum code length:   1.00085255346  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59836671]]
# difference %:  [[-371.48882797]]
id 11 go deeper
starting state of one level finer of parent id 11

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
--|         \9|
  |           |   /-12--node member--21
  |            \11
  |               \-13--node member--2..3..14..15..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.821572582265  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.66286566]]
# difference %:  [[-333.51654961]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
--|           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--2..14..15..24
  |               \13
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.702451750513  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[-244.11968318]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
--|            \11      /-16--node member--14
  |              |   /14
  |               \13   \-17--node member--2..15..24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11      /-16--node member--14
--|              |   /14
  |              |  |  |   /-18--node member--15
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.61717046]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11      /-16--node member--14
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.37496783]]
# difference %:  [[ 450.68379877]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.37496783]]

theoretically minimum code length:   0.293305729665  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--2
--|            \11      /16
  |              |   /14   \-19--node member--14
  |              |  |  |
  |               \13   \-17--node member--15..24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
finish all branches of this subtree finished
id 16 will be erased

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-19--node member--15
  |            \11      /16
--|              |     |   \-20--node member--24
  |              |   /14
  |              |  |  |--17--node member--2
  |               \13  |
  |                 |   \-18--node member--14
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[-213.6700138]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--2..24
--|            \11      /16
  |              |   /14   \-19--node member--14
  |              |  |  |
  |               \13   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--21
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--14
  |              |  |  |
  |               \13   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11      /-16--node member--15
--|              |   /14
  |              |  |  |   /-18--node member--14
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.66220524]]
# difference %:  [[ 171.90913949]]
$$$ ql state: best-- [[ 0.66286566]]  now-- [[ 0.66220524]]

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
--|            \11
  |              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.66286566]]
# difference %:  [[ 172.08058586]]
$$$ ql state: best-- [[ 0.66286566]]  now-- [[ 0.66286566]]

theoretically minimum code length:   0.702451750513  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[-213.6700138]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
--|            \11      /-16--node member--15
  |              |   /14
  |               \13   \-17--node member--2..14..24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11      /-16--node member--15
--|              |   /14
  |              |  |  |   /-18--node member--14
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.54018922]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11      /-16--node member--15
--|              |   /14
  |              |  |  |   /-18--node member--14
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.54018922]]  now-- [[ 0.61717046]]
ql best: [[ 0.61717046]] at loop count, 1

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11      /-16--node member--14
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
--|            \11      /16
  |              |   /14   \-19--node member--2..24
  |              |  |  |
  |               \13   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.37496783]]
# difference %:  [[ 450.68379877]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.37496783]]

theoretically minimum code length:   0.409146020847  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--15
--|            \11      /16
  |              |   /14   \-19--node member--24
  |              |  |  |
  |               \13   \-17--node member--2..14
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49567564]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49567564]]  now-- [[-0.49567564]]
finish all branches of this subtree finished
id 16 will be erased

theoretically minimum code length:   0.293305729665  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-19--node member--2
  |            \11      /16
--|              |     |   \-20--node member--14
  |              |   /14
  |              |  |  |--17--node member--15
  |               \13  |
  |                 |   \-18--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[-0.49897555]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49897555]]  now-- [[-0.49897555]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[-213.6700138]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.66220524]]
# difference %:  [[ 171.90913949]]
$$$ ql state: best-- [[ 0.66286566]]  now-- [[ 0.66220524]]

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
--|            \11
  |              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--2..24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
--|              |   /-14--node member--14
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11   /-14--node member--14
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--21
  |            \11
  |              |   /-14--node member--14
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.66286566]]
# difference %:  [[ 172.08058586]]
$$$ ql state: best-- [[ 0.66286566]]  now-- [[ 0.66286566]]

theoretically minimum code length:   0.702451750513  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[-244.11968318]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
--|            \11      /-16--node member--14
  |              |   /14
  |               \13   \-17--node member--2..15..24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11      /-16--node member--14
--|              |   /14
  |              |  |  |   /-18--node member--15
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11      /-16--node member--15
--|              |   /14
  |              |  |  |   /-18--node member--14
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.61717046]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11      /-16--node member--14
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--14
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
--|            \11      /16
  |              |   /14   \-19--node member--2..24
  |              |  |  |
  |               \13   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |         /-18--node member--14
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |            \11      /-16--node member--15
--|              |   /14
  |              |  |  |   /-18--node member--14
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--21
  |           |  |
  |           |  |      /-16--node member--15
  |            \11   /14
--|              |  |  |   /-18--node member--14
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.66286566]]
# difference %:  [[ 172.08058586]]
$$$ ql state: best-- [[ 0.66286566]]  now-- [[ 0.66286566]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 11
##### start re-clustering for node id 11
# clustring core algorithm Converged
# improved quality value:  [[ 0.71956591]]
# difference %:  [[ 197.40730134]]
$$$ ql state: best-- [[ 0.59836671]]  now-- [[ 0.71956591]]
ql best: [[ 0.71956591]] at loop count, 0

theoretically minimum code length:   0.881731721707  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[-312.28785556]]
id 12 go deeper
starting state of one level finer of parent id 12

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|      /-14--node member--14
--|           |   /12
  |            \11   \-15--node member--2..15..21..24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|      /-14--node member--14
  |           |   /12
--|           |  |  |   /-16--node member--2..15..24
  |            \11   \15
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|     |
  |           |   /12      /-18--node member--15
--|           |  |  |   /16
  |           |  |   \15   \-19--node member--2..24
  |            \11     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--15
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
--|           |  |   \15
  |            \11     |   /-18--node member--2..24
  |              |      \17
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12   /-16--node member--21
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12   /-16--node member--21
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 691.94424436]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 193.3514294]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|      /-14--node member--14
  |           |   /12
--|           |  |  |   /-16--node member--21
  |            \11   \15
  |              |      \-17--node member--2..15..24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
--|           |  |   \15
  |            \11     |   /-18--node member--2..24
  |              |      \17
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12   /-16--node member--21
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
--|           |  |   \15
  |            \11     |   /-18--node member--2..24
  |              |      \17
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12   /-16--node member--21
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12   /-16--node member--21
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12   /-16--node member--21
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|     |
  |           |   /12      /-18--node member--2..24
--|           |  |  |   /16
  |           |  |   \15   \-19--node member--15
  |            \11     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--15
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--15
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|     |
  |           |   /12      /-18--node member--2..24
--|           |  |  |   /16
  |           |  |   \15   \-19--node member--15
  |            \11     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--15
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12      /-18--node member--15
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--15
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--15
  |              |     |
  |              |      \-17--node member--21
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
--|           |  |   \15
  |            \11     |   /-18--node member--2..24
  |              |      \17
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--14
  |        |  |     |
  |         \9|   /12   /-16--node member--21
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--14
  |         \9|   /12
  |           |  |  |   /-16--node member--21
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.55114917]]
# difference %:  [[ 179.68631621]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.55114917]]

theoretically minimum code length:   0.702451750513  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[-213.6700138]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|      /-14--node member--21
  |           |   /12
--|           |  |  |   /-16--node member--2..14..24
  |            \11   \15
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|     |
  |           |   /12      /-18--node member--14
--|           |  |  |   /16
  |           |  |   \15   \-19--node member--2..24
  |            \11     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--14
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--14
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--14
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--14
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--14
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.54018922]]  now-- [[ 0.61717046]]
ql best: [[ 0.61717046]] at loop count, 0

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
--|           |  |   \15
  |            \11     |   /-18--node member--2..24
  |              |      \17
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12   /-16--node member--14
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12   /-16--node member--14
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.61717046]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
--|           |  |   \15
  |            \11     |   /-18--node member--2..24
  |              |      \17
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12   /-16--node member--14
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12   /-16--node member--14
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.61717046]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
--|           |  |   \15
  |            \11     |   /-18--node member--2..24
  |              |      \17
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12   /-16--node member--14
  |           |  |  |  |
--|           |  |   \15      /-20--node member--2
  |           |  |     |   /18
  |            \11      \17   \-21--node member--24
  |              |        |
  |              |         \-19--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|   /12
  |           |  |  |   /-16--node member--14
  |           |  |   \15
--|           |  |     |   /-18--node member--15
  |            \11      \17
  |              |        |   /-20--node member--2
  |              |         \19
  |              |            \-21--node member--24
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.54018922]]
# difference %:  [[ 649.26778426]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.54018922]]

theoretically minimum code length:   0.511189229275  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |      /-14--node member--21
  |         \9|     |
  |           |   /12      /-18--node member--2..24
--|           |  |  |   /16
  |           |  |   \15   \-19--node member--14
  |            \11     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|     |         /-20--node member--2
  |           |   /12      /18
--|           |  |  |   /16   \-21--node member--24
  |           |  |  |  |  |
  |            \11   \15   \-19--node member--14
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--14
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--14
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--14
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |     |  |   /-10--node member--11
  |      \7|  |
  |        |  |      /-14--node member--21
  |        |  |     |
  |         \9|   /12      /-18--node member--14
  |           |  |  |   /16
--|           |  |  |  |  |   /-20--node member--2
  |           |  |   \15   \19
  |            \11     |      \-21--node member--24
  |              |     |
  |              |      \-17--node member--15
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.31554462]]
# difference %:  [[-98.07956243]]
$$$ ql state: best-- [[ 0.31554462]]  now-- [[ 0.31554462]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.61717046]]
# difference %:  [[ 741.79358616]]
$$$ ql state: best-- [[ 0.61717046]]  now-- [[ 0.61717046]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 193.3514294]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|      /-14--node member--14
  |           |   /12
--|           |  |  |   /-16--node member--15..21..24
  |            \11   \15
  |              |      \-17--node member--2
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.59306397]]
# difference %:  [[ 202.6615309]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.59306397]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|      /-14--node member--14
  |           |   /12
--|           |  |  |   /-16--node member--15..21..24
  |            \11   \15
  |              |      \-17--node member--2
  |              |
  |               \-13--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 12
##### start re-clustering for node id 12
# clustring core algorithm Converged
# improved quality value:  [[ 0.55256441]]
# difference %:  [[ 188.82204072]]
$$$ ql state: best-- [[ 0.59306397]]  now-- [[ 0.55256441]]
finish all branches of this subtree finished
id 12 will be erased
just after inner while 11
##### start re-clustering for node id 11
# clustring core algorithm Converged
# improved quality value:  [[ 0.65304177]]
# difference %:  [[ 161.33616603]]
$$$ ql state: best-- [[ 0.71956591]]  now-- [[ 0.65304177]]

theoretically minimum code length:   0.844923937808  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[-301.40545819]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
--|           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--2..3..15..24
  |               \13
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
--|            \11      /-16--node member--2..15..24
  |              |   /14
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
--|            \11      /16
  |              |   /14   \-19--node member--2..24
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--3
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--3
--|              |   /14
  |              |  |  |   /-18--node member--15
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--3
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--2..24
--|            \11      /16
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 189.63227893]]
$$$ ql state: best-- [[ 0.60180691]]  now-- [[ 0.6714833]]
ql best: [[ 0.6714833]] at loop count, 0

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
--|            \11      /-16--node member--2..15..24
  |              |   /14
  |               \13   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
--|            \11      /16
  |              |   /14   \-19--node member--2..24
  |              |  |  |
  |               \13   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--21
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--2..24
--|            \11      /16
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--2..24
--|            \11      /16
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 691.94424436]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[ 169.95510536]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.60180691]]

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
--|            \11      /-16--node member--2..15..24
  |              |   /14
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--2..24
--|            \11      /16
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--3
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--2..24
--|            \11      /16
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |        |  |   /-12--node member--14
  |         \9|  |
  |           |  |            /-20--node member--2
  |           |  |         /18
--|            \11      /16   \-21--node member--24
  |              |     |  |
  |              |   /14   \-19--node member--15
  |              |  |  |
  |               \13   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--3
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--3
--|              |   /14
  |              |  |  |   /-18--node member--15
  |               \13   \17
  |                 |      \-19--node member--2..24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--3
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--3
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--21
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[ 169.95510536]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.60180691]]

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--15
  |                 |   /16
  |                  \15   \-19--node member--2..24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 189.63227893]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.6714833]]

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[-223.4493011]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
--|            \11      /-16--node member--2
  |              |   /14
  |               \13   \-17--node member--15..21..24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]

theoretically minimum code length:   0.588425992042  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.28796993]]
# difference %:  [[-90.65366777]]
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.5548038]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[ 0.5548038]]  now-- [[ 0.5548038]]
finish all branches of this subtree finished
id 14 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60365166]]
# difference %:  [[ 178.29449213]]
$$$ ql state: best-- [[ 0.6714833]]  now-- [[ 0.60365166]]
finish all branches of this subtree finished
id 13 will be erased
just after inner while 11
##### start re-clustering for node id 11
# clustring core algorithm Converged
# improved quality value:  [[ 0.65304177]]
# difference %:  [[ 161.33616603]]
$$$ ql state: best-- [[ 0.71956591]]  now-- [[ 0.65304177]]

theoretically minimum code length:   0.844923937808  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[-301.40545819]]
id 13 go deeper
starting state of one level finer of parent id 13

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
--|           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
  |               \13
  |                  \-15--node member--2..3..15..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                        \-19--node member--2..24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.60180691]]
# difference %:  [[ 169.95510536]]
$$$ ql state: best-- [[ 0.60180691]]  now-- [[ 0.60180691]]

theoretically minimum code length:   0.665643966614  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[-252.795327]]
id 15 go deeper
starting state of one level finer of parent id 15

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
--|            \11
  |              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--2..15..24
  |                  \15
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
--|              |  |
  |               \13      /-18--node member--2..24
  |                 |   /16
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|              |  |         /-20--node member--2
  |               \13      /18
  |                 |   /16   \-21--node member--24
  |                 |  |  |
  |                  \15   \-19--node member--15
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13      /-18--node member--15
  |                 |   /16
  |                 |  |  |   /-20--node member--2
  |                  \15   \19
  |                    |      \-21--node member--24
  |                    |
  |                     \-17--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
--|              |   /-14--node member--21
  |               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--2..24
  |                     \17
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11   /-14--node member--21
  |              |  |
--|               \13   /-16--node member--3
  |                 |  |
  |                  \15      /-20--node member--2
  |                    |   /18
  |                     \17   \-21--node member--24
  |                       |
  |                        \-19--node member--15
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
   /1|
  |  |   /-6--node member--12
  |   \5|
  |     |   /-8--node member--1
  |      \7|
  |        |   /-10--node member--11
  |         \9|
  |           |   /-12--node member--14
  |            \11
  |              |   /-14--node member--21
--|               \13
  |                 |   /-16--node member--3
  |                  \15
  |                    |   /-18--node member--15
  |                     \17
  |                       |   /-20--node member--2
  |                        \19
  |                           \-21--node member--24
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 17 will be erased
just after inner while 15
##### start re-clustering for node id 15
# clustring core algorithm Converged
# improved quality value:  [[ 0.63025618]]
# difference %:  [[ 611.62608461]]
$$$ ql state: best-- [[ 0.63025618]]  now-- [[ 0.63025618]]
finish all branches of this subtree finished
id 15 will be erased
just after inner while 13
##### start re-clustering for node id 13
# clustring core algorithm Converged
# improved quality value:  [[ 0.6714833]]
# difference %:  [[ 189.63227893]]
$$$ ql state: best-- [[ 0.60180691]]  now-- [[ 0.6714833]]
ql best: [[ 0.6714833]] at loop count, 1

theoretically minimum code length:   0.725803106055  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[-232.52591061]]
id 14 go deeper
starting state of one level finer of parent id 14

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
--|            \11      /-16--node member--2..15..24
  |              |   /14
  |               \13   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 16 go deeper
starting state of one level finer of parent id 16

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
--|            \11      /16
  |              |   /14   \-19--node member--2..24
  |              |  |  |
  |               \13   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |         /-18--node member--15
  |            \11      /16
--|              |     |  |   /-20--node member--2
  |              |   /14   \19
  |              |  |  |      \-21--node member--24
  |               \13  |
  |                 |   \-17--node member--21
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 16
##### start re-clustering for node id 16
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]
finish all branches of this subtree finished
id 16 will be erased
just after inner while 14
##### start re-clustering for node id 14
# clustring core algorithm Converged
# improved quality value:  [[ 0.57734017]]
# difference %:  [[ 720.05132581]]
$$$ ql state: best-- [[ 0.57734017]]  now-- [[ 0.57734017]]

theoretically minimum code length:   0.546523134861  bits
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
id 17 go deeper
starting state of one level finer of parent id 17

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |            \11      /-16--node member--21
--|              |   /14
  |              |  |  |   /-18--node member--2..24
  |               \13   \17
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 18 go deeper
starting state of one level finer of parent id 18

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11     |
--|              |   /14      /-20--node member--2
  |              |  |  |   /18
  |              |  |   \17   \-21--node member--24
  |               \13     |
  |                 |      \-19--node member--15
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 18
##### start re-clustering for node id 18
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 18 will be erased
just after inner while 17
##### start re-clustering for node id 17
# clustring core algorithm Converged
# improved quality value:  [[ 0.26061488]]
# difference %:  [[-81.99460008]]
$$$ ql state: best-- [[ 0.26061488]]  now-- [[ 0.26061488]]

theoretically minimum code length:   0.355260613624  bits
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
id 19 go deeper
starting state of one level finer of parent id 19

      /-4--node member--4
     |
   /1|   /-6--node member--12
  |  |  |
  |   \5|   /-8--node member--1
  |     |  |
  |      \7|   /-10--node member--11
  |        |  |
  |         \9|   /-12--node member--14
  |           |  |
  |           |  |      /-16--node member--21
  |            \11   /14
--|              |  |  |   /-18--node member--15
  |              |  |   \17
  |               \13     |   /-20--node member--2
  |                 |      \19
  |                 |         \-21--node member--24
  |                 |
  |                  \-15--node member--3
  |
  |--2--node member--5..7..8..13..17..19..23
  |
   \-3--node member--6..9..10..16..18..20..22
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
just after inner while 19
##### start re-clustering for node id 19
# clustring core algorithm Converged
# improved quality value:  [[-0.49982584]]
# difference %:  [[ 100.]]
$$$ ql state: best-- [[-0.49982584]]  now-- [[-0.49982584]]
finish all branches of this subtree finished
id 19 will be erased
just after inner while 17
##### start re-clustering for node id 17
